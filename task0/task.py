# Есть граф ориентированный, взвешенный и ациклический.
# G = (V, E) - граф: упорядоченное множество пар, элементы которого - вершины графа и ребра
# V = {v1, v2, v3, vi, vn} - неупорядоченное множество вершин
# E = {e1, e2, e3, ei, en} - неупорядоченное множество ребер
# ei = (vj, vk, mi) принадлежит E - ребро
# vj, vk принадлежит V - вершины
# mi принадлежит R - вес ребра
#
# Задача: считать CSV файл, описывающий граф, и нарисовать граф в виде матрицы смежности.
# Написать функцию, которая на вход получает строку (именно как строчка, то есть считываем CSV, а потом преобразовываем это в строку) и возвращает list[list]
# Это task0. Это функция потом пойдёт в task1

def main(v: str) -> list[list]:
    pass


if __name__ == '__main__':
    V: set[str] = {'v1', 'v2', 'v3', 'v4'}
    E: set[tuple[str, str, float]] = {
        ('v1', 'v2', 25.0),
        ('v1', 'v3', 12.0),
        ('v2', 'v4', 2.0),
        ('v3', 'v4', 2.0),
    }
    G = (V, E)
    main("")
